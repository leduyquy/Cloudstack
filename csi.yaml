---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cloudstack-csi-controller
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cloudstack-csi-controller-role
rules:
  - apiGroups: [""]
    resources: ["nodes", "pods"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["persistentvolumeclaims"]
    verbs: ["get", "list", "watch", "update"]
  - apiGroups: [""]
    resources: ["persistentvolumeclaims/status"]
    verbs: ["patch"]
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["get", "list", "watch", "create", "delete", "patch"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["get", "list", "watch", "create", "update", "patch"]
  - apiGroups: ["coordination.k8s.io"]
    resources: ["leases"]
    verbs: ["get", "watch", "list", "delete", "update", "create"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["storageclasses", "csinodes"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["volumeattachments"]
    verbs: ["get", "list", "watch", "patch"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["volumeattachments/status"]
    verbs: ["patch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cloudstack-csi-controller-binding
subjects:
  - kind: ServiceAccount
    name: cloudstack-csi-controller
    namespace: kube-system
roleRef:
  kind: ClusterRole
  name: cloudstack-csi-controller-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: storage.k8s.io/v1
kind: CSIDriver
metadata:
  name: csi.cloudstack.apache.org
spec:
  # Supports only persistent volumes.
  volumeLifecycleModes:
    - Persistent
---
# In this YAML file CloudStack CSI Controller contains the following sidecars:
# external-attacher, external-provisioner, external-resizer, liveness-probe
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cloudstack-csi-controller
  namespace: kube-system
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: cloudstack-csi-controller
  template:
    metadata:
      labels:
        app.kubernetes.io/name: cloudstack-csi-controller
        app.kubernetes.io/part-of: cloudstack-csi-driver
    spec:
      serviceAccountName: cloudstack-csi-controller
      nodeSelector:
        kubernetes.io/os: linux
        node-role.kubernetes.io/control-plane: ""
      tolerations:
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists

      containers:
        - name: cloudstack-csi-controller
          image: ghcr.io/leaseweb/cloudstack-csi-driver:0.4.2
          imagePullPolicy: Always
          args:
            - "-endpoint=$(CSI_ENDPOINT)"
            - "-cloudstackconfig=/etc/cloudstack-csi-driver/cloud-config"
            - "-debug"
          env:
            - name: CSI_ENDPOINT
              value: unix:///var/lib/csi/sockets/pluginproxy/csi.sock
          securityContext:
            runAsNonRoot: true
            runAsUser: 65532
            runAsGroup: 65532
          volumeMounts:
            - name: socket-dir
              mountPath: /var/lib/csi/sockets/pluginproxy/
            - name: cloudstack-conf
              mountPath: /etc/cloudstack-csi-driver
            - name: cacert
              mountPath: /etc/ssl/certs/ca-certificates.crt
          ports:
            - name: healthz
              containerPort: 9808
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: healthz
            initialDelaySeconds: 30
            timeoutSeconds: 10
            periodSeconds: 180
            failureThreshold: 3

        - name: external-provisioner
          image: registry.k8s.io/sig-storage/csi-provisioner:v5.0.1
          imagePullPolicy: IfNotPresent
          args:
            - "--v=4"
            - "--timeout=300s"
            - "--csi-address=$(ADDRESS)"
            - "--kube-api-qps=100"
            - "--kube-api-burst=100"
            - "--leader-election"
            - "--leader-election-lease-duration=120s"
            - "--leader-election-renew-deadline=60s"
            - "--leader-election-retry-period=30s"
            - "--default-fstype=ext4"
            - "--feature-gates=Topology=true"
            - "--strict-topology"
          env:
            - name: ADDRESS
              value: /var/lib/csi/sockets/pluginproxy/csi.sock
          volumeMounts:
            - name: socket-dir
              mountPath: /var/lib/csi/sockets/pluginproxy/

        - name: external-attacher
          image: registry.k8s.io/sig-storage/csi-attacher:v4.6.1
          imagePullPolicy: IfNotPresent
          args:
            - "--v=4"
            - "--timeout=300s"
            - "--csi-address=$(ADDRESS)"
            - "--leader-election"
            - "--leader-election-lease-duration=120s"
            - "--leader-election-renew-deadline=60s"
            - "--leader-election-retry-period=30s"
            - "--kube-api-qps=100"
            - "--kube-api-burst=100"
          env:
            - name: ADDRESS
              value: /var/lib/csi/sockets/pluginproxy/csi.sock
          volumeMounts:
            - name: socket-dir
              mountPath: /var/lib/csi/sockets/pluginproxy/

        - name: external-resizer
          image: registry.k8s.io/sig-storage/csi-resizer:v1.11.1
          args:
            - "--v=5"
            - "--csi-address=$(ADDRESS)"
            - --timeout=300s
            - --leader-election
            - --leader-election-lease-duration=120s
            - --leader-election-renew-deadline=60s
            - --leader-election-retry-period=30s
            - --kube-api-qps=100
            - --kube-api-burst=100
          env:
            - name: ADDRESS
              value: /var/lib/csi/sockets/pluginproxy/csi.sock
          imagePullPolicy: "IfNotPresent"
          volumeMounts:
            - name: socket-dir
              mountPath: /var/lib/csi/sockets/pluginproxy/

        - name: liveness-probe
          image: registry.k8s.io/sig-storage/livenessprobe:v2.12.0
          args:
            - "--v=4"
            - "--csi-address=$(ADDRESS)"
          env:
            - name: ADDRESS
              value: /var/lib/csi/sockets/pluginproxy/csi.sock
          volumeMounts:
            - name: socket-dir
              mountPath: /var/lib/csi/sockets/pluginproxy/

      volumes:
        - name: socket-dir
          emptyDir: {}
        - name: cloudstack-conf
          secret:
            secretName: cloudstack-secret
        - name: cacert
          hostPath:
            path: /etc/ssl/certs/ca-certificates.crt
            type: FileOrCreate
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: cloudstack-csi-node
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: cloudstack-csi-node
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: cloudstack-csi-node
        app.kubernetes.io/part-of: cloudstack-csi-driver
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists

      containers:
        - name: cloudstack-csi-node
          image: ghcr.io/leaseweb/cloudstack-csi-driver:0.4.2
          imagePullPolicy: Always
          args:
            - "-endpoint=$(CSI_ENDPOINT)"
            - "-cloudstackconfig=/etc/cloudstack-csi-driver/cloud-config"
            - "-nodeName=$(NODE_NAME)"
            - "-debug"
          env:
            - name: CSI_ENDPOINT
              value: unix:///csi/csi.sock
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          securityContext:
            privileged: true
            capabilities:
              add: ["SYS_ADMIN"]
            allowPrivilegeEscalation: true
          volumeMounts:
            - name: plugin-dir
              mountPath: /csi
            - name: kubelet-dir
              mountPath: /var/lib/kubelet
              # needed so that any mounts setup inside this container are
              # propagated back to the host machine.
              mountPropagation: Bidirectional
            - name: device-dir
              mountPath: /dev
            - name: cloud-init-dir
              mountPath: /run/cloud-init/
            - name: cloudstack-conf
              mountPath: /etc/cloudstack-csi-driver
            - name: cacert
              mountPath: /etc/ssl/certs/ca-certificates.crt
          ports:
            - name: healthz
              containerPort: 9808
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: healthz
            initialDelaySeconds: 10
            timeoutSeconds: 5
            periodSeconds: 5
            failureThreshold: 3

        - name: liveness-probe
          image: registry.k8s.io/sig-storage/livenessprobe:v2.12.0
          args:
            - "--v=4"
            - "--csi-address=$(ADDRESS)"
          env:
            - name: ADDRESS
              value: /csi/csi.sock
          volumeMounts:
            - name: plugin-dir
              mountPath: /csi

        - name: node-driver-registrar
          image: registry.k8s.io/sig-storage/csi-node-driver-registrar:v2.10.1
          imagePullPolicy: IfNotPresent
          args:
            - "--csi-address=$(ADDRESS)"
            - "--kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)"
            - "--v=5"
            - "--health-port=9809"
          livenessProbe:
            httpGet:
              path: /healthz
              port: healthz
            failureThreshold: 5
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 15
          env:
            - name: ADDRESS
              value: /csi/csi.sock
            - name: DRIVER_REG_SOCK_PATH
              value: /var/lib/kubelet/plugins/csi.cloudstack.apache.org/csi.sock
          volumeMounts:
            - name: plugin-dir
              mountPath: /csi
            - name: registration-dir
              mountPath: /registration
          ports:
            - containerPort: 9809
              name: healthz

      volumes:
        - name: plugin-dir
          hostPath:
            path: /var/lib/kubelet/plugins/csi.cloudstack.apache.org/
            type: DirectoryOrCreate
        - name: kubelet-dir
          hostPath:
            path: /var/lib/kubelet
            type: Directory
        - name: device-dir
          hostPath:
            path: /dev
            type: Directory
        - name: registration-dir
          hostPath:
            path: /var/lib/kubelet/plugins_registry
            type: Directory
        - name: cloud-init-dir
          hostPath:
            path: /run/cloud-init/
            type: Directory
        - name: cloudstack-conf
          secret:
            secretName: cloudstack-secret
        - name: cacert
          hostPath:
            path: /etc/ssl/certs/ca-certificates.crt
            type: FileOrCreate
